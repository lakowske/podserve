apiVersion: v1
kind: Pod
metadata:
  name: podserve-certificates
  labels:
    app: podserve
    component: certificates
spec:
  containers:
  - name: certbot
    image: localhost/podserve-certbot:latest
    imagePullPolicy: IfNotPresent
    command: ["/usr/local/bin/entrypoint.sh", "init"]
    ports:
    - containerPort: 80
      hostPort: 80  # Needed for Let's Encrypt HTTP-01 challenge
    env:
    - name: CERTBOT_DOMAIN
      value: "lab.sethlakowske.com"
    - name: CERTBOT_EMAIL
      value: "lakowske@gmail.com"
    - name: CERTBOT_METHOD
      value: "standalone"  # Use Let's Encrypt standalone
    - name: CERTBOT_STAGING
      value: "true"  # Use Let's Encrypt staging server
    volumeMounts:
    - name: certificates
      mountPath: /data/state/certificates
    - name: config
      mountPath: /data/config
    - name: logs
      mountPath: /data/logs
    securityContext:
      runAsUser: 0
      runAsGroup: 0
  volumes:
  - name: certificates
    persistentVolumeClaim:
      claimName: podserve-certificates
  - name: config
    persistentVolumeClaim:
      claimName: podserve-certificates-config
  - name: logs
    persistentVolumeClaim:
      claimName: podserve-certificates-logs
  restartPolicy: Always
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: podserve-certificates
spec:
  accessModes:
    - ReadWriteMany  # Allow multiple pods to access
  resources:
    requests:
      storage: 200Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: podserve-certificates-config
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: podserve-certificates-logs
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Mi